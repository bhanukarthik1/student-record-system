# -*- coding: utf-8 -*-
"""student_management

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mzLOVohpGMSD3CXiUZmomphdx4vOTLKQ
"""

FILENAME = "students.txt"
def add_student():
    roll = input("Enter Roll Number: ")
    name = input("Enter Name: ")
    branch = input("Enter Branch: ")
    marks = input("Enter Marks: ")

    with open(FILENAME, "a") as f:
        f.write(f"{roll},{name},{branch},{marks}\n")

    print("✅ Student added successfully.")
def view_students():
    print("\n--- All Student Records ---")
    try:
        with open(FILENAME, "r") as f:
            students = f.readlines()
            if not students:
                print("No student records found.")
                return

            print("{:<10} {:<20} {:<10} {:<5}".format("Roll", "Name", "Branch", "Marks"))
            print("-" * 50)
            for line in students:
                roll, name, branch, marks = line.strip().split(",")
                print("{:<10} {:<20} {:<10} {:<5}".format(roll, name, branch, marks))
    except FileNotFoundError:
        print("No student file found. Add some records first.")
def search_student():
    roll_to_search = input("Enter Roll Number to search: ")

    found = False
    try:
        with open(FILENAME, "r") as f:
            for line in f:
                roll, name, branch, marks = line.strip().split(",")
                if roll == roll_to_search:
                    print("\n--- Student Found ---")
                    print(f"Roll: {roll}")
                    print(f"Name: {name}")
                    print(f"Branch: {branch}")
                    print(f"Marks: {marks}")
                    found = True
                    break
        if not found:
            print("❌ Student not found.")
    except FileNotFoundError:
        print("No student records file found.")
def update_student():
    roll_to_update = input("Enter Roll Number to update: ")
    updated = False

    try:
        with open(FILENAME, "r") as f:
            lines = f.readlines()

        with open(FILENAME, "w") as f:
            for line in lines:
                roll, name, branch, marks = line.strip().split(",")
                if roll == roll_to_update:
                    print("\n--- Current Details ---")
                    print(f"Name: {name}, Branch: {branch}, Marks: {marks}")

                    # New values
                    name = input("Enter new Name: ")
                    branch = input("Enter new Branch: ")
                    marks = input("Enter new Marks: ")
                    f.write(f"{roll},{name},{branch},{marks}\n")
                    updated = True
                else:
                    f.write(line)

        if updated:
            print("✅ Student record updated successfully.")
        else:
            print("❌ Roll Number not found.")
    except FileNotFoundError:
        print("Student file not found.")
def delete_student():
    roll_to_delete = input("Enter Roll Number to delete: ")
    deleted = False

    try:
        with open(FILENAME, "r") as f:
            lines = f.readlines()

        with open(FILENAME, "w") as f:
            for line in lines:
                roll, name, branch, marks = line.strip().split(",")
                if roll != roll_to_delete:
                    f.write(line)
                else:
                    deleted = True

        if deleted:
            print("✅ Student record deleted successfully.")
        else:
            print("❌ Roll Number not found.")
    except FileNotFoundError:
        print("Student file not found.")



def menu():
    print("\n--- Student Record System ---")
    print("1. Add Student")
    print("2. View All Students")
    print("3. Search Student")
    print("4. Update Student")
    print("5. Delete Student")
    print("6. Exit")

while True:
    menu()
    choice = input("Enter your choice (1-6): ")

    if choice == "1":
        # TODO: Add student
        add_student()
    elif choice == "2":
        # TODO: View all students
        view_students()
    elif choice == "3":
        # TODO: Search student
        search_student()
    elif choice == "4":
        # TODO: Update student
        update_student()
    elif choice == "5":
        delete_student()
    elif choice == "6":
        print("Exiting... Goodbye!")
        break
    else:
        print("Invalid choice. Try again.")